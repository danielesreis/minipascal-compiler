package compilador.ast;
public interface Visitor {
    public Object visitPrograma(Programa p, Object o);
    public Object visitComandoAtribuicao(ComandoAtribuicao c, Object o);
    public Object visitComandoAtribuicaoIndexada(ComandoAtribuicaoIndexada c, Object o);
    public Object visitComandoBegin(ComandoBegin c, Object o);
    public Object visitComandoChamadaProcedimento(ComandoChamadaProcedimento c, Object o);
    public Object visitComandoChamadaProcedimentoSemArgs(ComandoChamadaProcedimentoSemArgs c, Object o);
    public Object visitComandoIf(ComandoIf c, Object o);
    public Object visitComandoIfElse(ComandoIfElse c, Object o);
    public Object visitComandoSequencial(ComandoSequencial c, Object o);
    public Object visitComandoWhile(ComandoWhile c, Object o);
    public Object visitCorpoComDeclaracaoComando(CorpoComDeclaracaoComando c, Object o);
    public Object visitCorpoSemComando(CorpoSemComando c, Object o);
    public Object visitCorpoSemDeclaracao(CorpoSemDeclaracao c, Object o);
    public Object visitDeclaracaoFuncao(DeclaracaoFuncao d, Object o);
    public Object visitDeclaracaoFuncaoSemArgs(DeclaracaoFuncaoSemArgs d, Object o);
    public Object visitDeclaracaoProcedure(DeclaracaoProcedure d, Object o);
    public Object visitDeclaracaoProcedureSemArgs(DeclaracaoProcedureSemArgs d, Object o);
    public Object visitDeclaracaoSequencial(DeclaracaoSequencial d, Object o);
    public Object visitDeclaracaoVariavel(DeclaracaoVariavel d, Object o);
    public Object visitExpressaoBinaria(ExpressaoBinaria e, Object o);
    public Object visitExpressaoSequencial(ExpressaoSequencial e, Object o);
    public Object visitExpressaoSimples(ExpressaoSimples e, Object o);
    public Object visitFatorAdSequencial(FatorAdSequencial f, Object o);
    public Object visitFatorChamadaFuncao(FatorChamadaFuncao f, Object o);
    public Object visitFatorChamadaFuncaoSemArgs(FatorChamadaFuncaoSemArgs f, Object o);
    public Object visitFatorId(FatorId f, Object o);
    public Object visitFatorMulSequencial(FatorMulSequencial f, Object o);
    public Object visitFatorExpressao(FatorExpressao f, Object o);
    public Object visitIdentifierSimples(IdentifierSimples i, Object o);
    public Object visitIdentifierSequencial(IdentifierSequencial i, Object o);
    public Object visitLiteral(Literal l, Object o);
    public Object visitOpAd(OpAd op, Object o);
    public Object visitOpMul(OpMul op, Object o);
    public Object visitOpRel(OpRel op, Object o);
    public Object visitParametroSequencial(ParametroSequencial p, Object o);
    public Object visitParametroSimples(ParametroSimples p, Object o);
    public Object visitTipoAgregado(TipoAgregado t, Object o);
    public Object visitTipoSimples(TipoSimples t, Object o);
    public Object visitVariavelId(VariavelId v, Object o);
    public Object visitVariavelIndexada(VariavelIndexada v, Object o);
}